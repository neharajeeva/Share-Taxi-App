package com.acs560.ShareTaxi.entities;
import jakarta.persistence.*;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

/**
 * The RideEntity class represents a ride being offered in the ShareTaxi system.
 * It is mapped to the "rides" table in the database and contains details about the
 * driver, car, route, timing, pricing, available seats, and passengers.
 */
@Entity
@Table(name = "rides")
public class RideEntity {

    /**
     * Unique identifier for the ride.
     * This value is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The driver offering the ride.
     * This is a foreign key reference to the CustomUserEntity table.
     */
    @ManyToOne
    @JoinColumn(name = "driver_id", nullable = false)
    private CustomUserEntity driver;

    /**
     * The car used for the ride.
     * This is a foreign key reference to the CarEntity table.
     */
    @ManyToOne
    @JoinColumn(name = "car_id", nullable = false)
    private CarEntity car;

    /**
     * The starting point of the ride.
     */
    private String startingPoint;

    /**
     * The destination of the ride.
     */
    private String destination;

    /**
     * The date on which the ride is scheduled.
     */
    private LocalDate date;

    /**
     * The time when the ride is scheduled to start.
     */
    private LocalDateTime startTime;

    /**
     * The time when the ride is expected to end.
     */
    private LocalDateTime endTime;

    /**
     * The price per head for passengers joining the ride.
     */
    @Column(precision = 6, scale = 2)
    private BigDecimal pricePerHead;

    /**
     * The number of seats available for passengers in the ride.
     */
    private int availableSeats;

    /**
     * The current status of the ride (e.g., "Yet to Start", "Ongoing", "Completed").
     */
    @Column(length = 50)
    private String rideStatus = "Yet to Start";

    /**
     * A set of passengers who have joined the ride.
     * This is represented by their user IDs.
     */
    @ManyToMany
    @JoinTable(
        name = "ride_passengers",
        joinColumns = @JoinColumn(name = "ride_id"),
        inverseJoinColumns = @JoinColumn(name = "user_id")
    )
    private Set<CustomUserEntity> passengers = new HashSet<>();

    // Getters and Setters

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public CustomUserEntity getDriver() {
        return driver;
    }

    public void setDriver(CustomUserEntity driver) {
        this.driver = driver;
    }

    public CarEntity getCar() {
        return car;
    }

    public void setCar(CarEntity car) {
        this.car = car;
    }

    public String getStartingPoint() {
        return startingPoint;
    }

    public void setStartingPoint(String startingPoint) {
        this.startingPoint = startingPoint;
    }

    public String getDestination() {
        return destination;
    }

    public void setDestination(String destination) {
        this.destination = destination;
    }

    public LocalDate getDate() {
        return date;
    }

    public void setDate(LocalDate date) {
        this.date = date;
    }

    public LocalDateTime getStartTime() {
        return startTime;
    }

    public void setStartTime(LocalDateTime startTime) {
        this.startTime = startTime;
    }

    public LocalDateTime getEndTime() {
        return endTime;
    }

    public void setEndTime(LocalDateTime endTime) {
        this.endTime = endTime;
    }

    public BigDecimal getPricePerHead() {
        return pricePerHead;
    }

    public void setPricePerHead(BigDecimal pricePerHead) {
        this.pricePerHead = pricePerHead;
    }

    public int getAvailableSeats() {
        return availableSeats;
    }

    public void setAvailableSeats(int availableSeats) {
        this.availableSeats = availableSeats;
    }

    public String getRideStatus() {
        return rideStatus;
    }

    public void setRideStatus(String rideStatus) {
        this.rideStatus = rideStatus;
    }

    public Set<CustomUserEntity> getPassengers() {
        return passengers;
    }

    public void setPassengers(Set<CustomUserEntity> passengers) {
        this.passengers = passengers;
    }
}
